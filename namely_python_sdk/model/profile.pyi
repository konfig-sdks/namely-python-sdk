# coding: utf-8

"""
    Namely API

    Move your app forward with the Namely API Move your app forward with the Namely API

    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from namely_python_sdk import schemas  # noqa: F401


class Profile(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.StrSchema
            email = schemas.StrSchema
            first_name = schemas.StrSchema
            last_name = schemas.StrSchema
            user_status = schemas.StrSchema
            updated_at = schemas.IntSchema
            created_at = schemas.IntSchema
            preferred_name = schemas.StrSchema
        
            @staticmethod
            def image() -> typing.Type['Image']:
                return Image
            full_name = schemas.StrSchema
        
            @staticmethod
            def job_title() -> typing.Type['JobTitleLink']:
                return JobTitleLink
        
            @staticmethod
            def reports_to() -> typing.Type['ProfileReportsTo']:
                return ProfileReportsTo
        
            @staticmethod
            def employee_type() -> typing.Type['ProfileEmployeeType']:
                return ProfileEmployeeType
            access_role = schemas.StrSchema
            
            
            class ethnicity(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ethnicity':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
        
            @staticmethod
            def links() -> typing.Type['ProfileLinks']:
                return ProfileLinks
            middle_name = schemas.StrSchema
            gender = schemas.StrSchema
            job_change_reason = schemas.StrSchema
            terminated_reason = schemas.StrSchema
            start_date = schemas.StrSchema
            departure_date = schemas.StrSchema
            employee_id = schemas.StrSchema
            personal_email = schemas.StrSchema
            dob = schemas.StrSchema
            ssn = schemas.StrSchema
            marital_status = schemas.StrSchema
            bio = schemas.StrSchema
            asset_management = schemas.StrSchema
            laptop_asset_number = schemas.StrSchema
            corporate_card_member = schemas.StrSchema
            key_tag_number = schemas.StrSchema
            linkedin_url = schemas.StrSchema
            office_main_number = schemas.StrSchema
            office_direct_dial = schemas.StrSchema
            office_phone = schemas.StrSchema
            office_fax = schemas.StrSchema
            office_company_mobile = schemas.StrSchema
            home_phone = schemas.StrSchema
            mobile_phone = schemas.StrSchema
        
            @staticmethod
            def home() -> typing.Type['Home']:
                return Home
        
            @staticmethod
            def office() -> typing.Type['Office']:
                return Office
            emergency_contact = schemas.StrSchema
            emergency_contact_phone = schemas.StrSchema
            resume = schemas.StrSchema
            current_job_description = schemas.StrSchema
            job_description = schemas.StrSchema
        
            @staticmethod
            def salary() -> typing.Type['Salary']:
                return Salary
        
            @staticmethod
            def healthcare() -> typing.Type['Healthcare']:
                return Healthcare
            healthcare_info = schemas.StrSchema
        
            @staticmethod
            def dental() -> typing.Type['Dental']:
                return Dental
            dental_info = schemas.StrSchema
            vision_plan_info = schemas.StrSchema
            life_insurance_info = schemas.StrSchema
            namely_time_employee_role = schemas.StrSchema
            namely_time_manager_role = schemas.StrSchema
            __annotations__ = {
                "id": id,
                "email": email,
                "first_name": first_name,
                "last_name": last_name,
                "user_status": user_status,
                "updated_at": updated_at,
                "created_at": created_at,
                "preferred_name": preferred_name,
                "image": image,
                "full_name": full_name,
                "job_title": job_title,
                "reports_to": reports_to,
                "employee_type": employee_type,
                "access_role": access_role,
                "ethnicity": ethnicity,
                "links": links,
                "middle_name": middle_name,
                "gender": gender,
                "job_change_reason": job_change_reason,
                "terminated_reason": terminated_reason,
                "start_date": start_date,
                "departure_date": departure_date,
                "employee_id": employee_id,
                "personal_email": personal_email,
                "dob": dob,
                "ssn": ssn,
                "marital_status": marital_status,
                "bio": bio,
                "asset_management": asset_management,
                "laptop_asset_number": laptop_asset_number,
                "corporate_card_member": corporate_card_member,
                "key_tag_number": key_tag_number,
                "linkedin_url": linkedin_url,
                "office_main_number": office_main_number,
                "office_direct_dial": office_direct_dial,
                "office_phone": office_phone,
                "office_fax": office_fax,
                "office_company_mobile": office_company_mobile,
                "home_phone": home_phone,
                "mobile_phone": mobile_phone,
                "home": home,
                "office": office,
                "emergency_contact": emergency_contact,
                "emergency_contact_phone": emergency_contact_phone,
                "resume": resume,
                "current_job_description": current_job_description,
                "job_description": job_description,
                "salary": salary,
                "healthcare": healthcare,
                "healthcare_info": healthcare_info,
                "dental": dental,
                "dental_info": dental_info,
                "vision_plan_info": vision_plan_info,
                "life_insurance_info": life_insurance_info,
                "namely_time_employee_role": namely_time_employee_role,
                "namely_time_manager_role": namely_time_manager_role,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_name"]) -> MetaOapg.properties.first_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_name"]) -> MetaOapg.properties.last_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_status"]) -> MetaOapg.properties.user_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_at"]) -> MetaOapg.properties.updated_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_at"]) -> MetaOapg.properties.created_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preferred_name"]) -> MetaOapg.properties.preferred_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["image"]) -> 'Image': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["full_name"]) -> MetaOapg.properties.full_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job_title"]) -> 'JobTitleLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reports_to"]) -> 'ProfileReportsTo': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employee_type"]) -> 'ProfileEmployeeType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["access_role"]) -> MetaOapg.properties.access_role: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ethnicity"]) -> MetaOapg.properties.ethnicity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["links"]) -> 'ProfileLinks': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middle_name"]) -> MetaOapg.properties.middle_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job_change_reason"]) -> MetaOapg.properties.job_change_reason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["terminated_reason"]) -> MetaOapg.properties.terminated_reason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["start_date"]) -> MetaOapg.properties.start_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departure_date"]) -> MetaOapg.properties.departure_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employee_id"]) -> MetaOapg.properties.employee_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["personal_email"]) -> MetaOapg.properties.personal_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dob"]) -> MetaOapg.properties.dob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssn"]) -> MetaOapg.properties.ssn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["marital_status"]) -> MetaOapg.properties.marital_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bio"]) -> MetaOapg.properties.bio: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["asset_management"]) -> MetaOapg.properties.asset_management: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["laptop_asset_number"]) -> MetaOapg.properties.laptop_asset_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["corporate_card_member"]) -> MetaOapg.properties.corporate_card_member: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["key_tag_number"]) -> MetaOapg.properties.key_tag_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linkedin_url"]) -> MetaOapg.properties.linkedin_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office_main_number"]) -> MetaOapg.properties.office_main_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office_direct_dial"]) -> MetaOapg.properties.office_direct_dial: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office_phone"]) -> MetaOapg.properties.office_phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office_fax"]) -> MetaOapg.properties.office_fax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office_company_mobile"]) -> MetaOapg.properties.office_company_mobile: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["home_phone"]) -> MetaOapg.properties.home_phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mobile_phone"]) -> MetaOapg.properties.mobile_phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["home"]) -> 'Home': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["office"]) -> 'Office': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emergency_contact"]) -> MetaOapg.properties.emergency_contact: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emergency_contact_phone"]) -> MetaOapg.properties.emergency_contact_phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resume"]) -> MetaOapg.properties.resume: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["current_job_description"]) -> MetaOapg.properties.current_job_description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job_description"]) -> MetaOapg.properties.job_description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salary"]) -> 'Salary': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthcare"]) -> 'Healthcare': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthcare_info"]) -> MetaOapg.properties.healthcare_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dental"]) -> 'Dental': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dental_info"]) -> MetaOapg.properties.dental_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vision_plan_info"]) -> MetaOapg.properties.vision_plan_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["life_insurance_info"]) -> MetaOapg.properties.life_insurance_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namely_time_employee_role"]) -> MetaOapg.properties.namely_time_employee_role: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namely_time_manager_role"]) -> MetaOapg.properties.namely_time_manager_role: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "email", "first_name", "last_name", "user_status", "updated_at", "created_at", "preferred_name", "image", "full_name", "job_title", "reports_to", "employee_type", "access_role", "ethnicity", "links", "middle_name", "gender", "job_change_reason", "terminated_reason", "start_date", "departure_date", "employee_id", "personal_email", "dob", "ssn", "marital_status", "bio", "asset_management", "laptop_asset_number", "corporate_card_member", "key_tag_number", "linkedin_url", "office_main_number", "office_direct_dial", "office_phone", "office_fax", "office_company_mobile", "home_phone", "mobile_phone", "home", "office", "emergency_contact", "emergency_contact_phone", "resume", "current_job_description", "job_description", "salary", "healthcare", "healthcare_info", "dental", "dental_info", "vision_plan_info", "life_insurance_info", "namely_time_employee_role", "namely_time_manager_role", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_name"]) -> typing.Union[MetaOapg.properties.first_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_name"]) -> typing.Union[MetaOapg.properties.last_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_status"]) -> typing.Union[MetaOapg.properties.user_status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_at"]) -> typing.Union[MetaOapg.properties.updated_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_at"]) -> typing.Union[MetaOapg.properties.created_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preferred_name"]) -> typing.Union[MetaOapg.properties.preferred_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["image"]) -> typing.Union['Image', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["full_name"]) -> typing.Union[MetaOapg.properties.full_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job_title"]) -> typing.Union['JobTitleLink', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reports_to"]) -> typing.Union['ProfileReportsTo', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employee_type"]) -> typing.Union['ProfileEmployeeType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["access_role"]) -> typing.Union[MetaOapg.properties.access_role, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ethnicity"]) -> typing.Union[MetaOapg.properties.ethnicity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["links"]) -> typing.Union['ProfileLinks', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middle_name"]) -> typing.Union[MetaOapg.properties.middle_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job_change_reason"]) -> typing.Union[MetaOapg.properties.job_change_reason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["terminated_reason"]) -> typing.Union[MetaOapg.properties.terminated_reason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["start_date"]) -> typing.Union[MetaOapg.properties.start_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departure_date"]) -> typing.Union[MetaOapg.properties.departure_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employee_id"]) -> typing.Union[MetaOapg.properties.employee_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["personal_email"]) -> typing.Union[MetaOapg.properties.personal_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dob"]) -> typing.Union[MetaOapg.properties.dob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssn"]) -> typing.Union[MetaOapg.properties.ssn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["marital_status"]) -> typing.Union[MetaOapg.properties.marital_status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bio"]) -> typing.Union[MetaOapg.properties.bio, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["asset_management"]) -> typing.Union[MetaOapg.properties.asset_management, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["laptop_asset_number"]) -> typing.Union[MetaOapg.properties.laptop_asset_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["corporate_card_member"]) -> typing.Union[MetaOapg.properties.corporate_card_member, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["key_tag_number"]) -> typing.Union[MetaOapg.properties.key_tag_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linkedin_url"]) -> typing.Union[MetaOapg.properties.linkedin_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office_main_number"]) -> typing.Union[MetaOapg.properties.office_main_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office_direct_dial"]) -> typing.Union[MetaOapg.properties.office_direct_dial, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office_phone"]) -> typing.Union[MetaOapg.properties.office_phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office_fax"]) -> typing.Union[MetaOapg.properties.office_fax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office_company_mobile"]) -> typing.Union[MetaOapg.properties.office_company_mobile, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["home_phone"]) -> typing.Union[MetaOapg.properties.home_phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mobile_phone"]) -> typing.Union[MetaOapg.properties.mobile_phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["home"]) -> typing.Union['Home', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["office"]) -> typing.Union['Office', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emergency_contact"]) -> typing.Union[MetaOapg.properties.emergency_contact, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emergency_contact_phone"]) -> typing.Union[MetaOapg.properties.emergency_contact_phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resume"]) -> typing.Union[MetaOapg.properties.resume, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["current_job_description"]) -> typing.Union[MetaOapg.properties.current_job_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job_description"]) -> typing.Union[MetaOapg.properties.job_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salary"]) -> typing.Union['Salary', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthcare"]) -> typing.Union['Healthcare', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthcare_info"]) -> typing.Union[MetaOapg.properties.healthcare_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dental"]) -> typing.Union['Dental', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dental_info"]) -> typing.Union[MetaOapg.properties.dental_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vision_plan_info"]) -> typing.Union[MetaOapg.properties.vision_plan_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["life_insurance_info"]) -> typing.Union[MetaOapg.properties.life_insurance_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namely_time_employee_role"]) -> typing.Union[MetaOapg.properties.namely_time_employee_role, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namely_time_manager_role"]) -> typing.Union[MetaOapg.properties.namely_time_manager_role, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "email", "first_name", "last_name", "user_status", "updated_at", "created_at", "preferred_name", "image", "full_name", "job_title", "reports_to", "employee_type", "access_role", "ethnicity", "links", "middle_name", "gender", "job_change_reason", "terminated_reason", "start_date", "departure_date", "employee_id", "personal_email", "dob", "ssn", "marital_status", "bio", "asset_management", "laptop_asset_number", "corporate_card_member", "key_tag_number", "linkedin_url", "office_main_number", "office_direct_dial", "office_phone", "office_fax", "office_company_mobile", "home_phone", "mobile_phone", "home", "office", "emergency_contact", "emergency_contact_phone", "resume", "current_job_description", "job_description", "salary", "healthcare", "healthcare_info", "dental", "dental_info", "vision_plan_info", "life_insurance_info", "namely_time_employee_role", "namely_time_manager_role", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        first_name: typing.Union[MetaOapg.properties.first_name, str, schemas.Unset] = schemas.unset,
        last_name: typing.Union[MetaOapg.properties.last_name, str, schemas.Unset] = schemas.unset,
        user_status: typing.Union[MetaOapg.properties.user_status, str, schemas.Unset] = schemas.unset,
        updated_at: typing.Union[MetaOapg.properties.updated_at, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        created_at: typing.Union[MetaOapg.properties.created_at, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        preferred_name: typing.Union[MetaOapg.properties.preferred_name, str, schemas.Unset] = schemas.unset,
        image: typing.Union['Image', schemas.Unset] = schemas.unset,
        full_name: typing.Union[MetaOapg.properties.full_name, str, schemas.Unset] = schemas.unset,
        job_title: typing.Union['JobTitleLink', schemas.Unset] = schemas.unset,
        reports_to: typing.Union['ProfileReportsTo', schemas.Unset] = schemas.unset,
        employee_type: typing.Union['ProfileEmployeeType', schemas.Unset] = schemas.unset,
        access_role: typing.Union[MetaOapg.properties.access_role, str, schemas.Unset] = schemas.unset,
        ethnicity: typing.Union[MetaOapg.properties.ethnicity, None, str, schemas.Unset] = schemas.unset,
        links: typing.Union['ProfileLinks', schemas.Unset] = schemas.unset,
        middle_name: typing.Union[MetaOapg.properties.middle_name, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        job_change_reason: typing.Union[MetaOapg.properties.job_change_reason, str, schemas.Unset] = schemas.unset,
        terminated_reason: typing.Union[MetaOapg.properties.terminated_reason, str, schemas.Unset] = schemas.unset,
        start_date: typing.Union[MetaOapg.properties.start_date, str, schemas.Unset] = schemas.unset,
        departure_date: typing.Union[MetaOapg.properties.departure_date, str, schemas.Unset] = schemas.unset,
        employee_id: typing.Union[MetaOapg.properties.employee_id, str, schemas.Unset] = schemas.unset,
        personal_email: typing.Union[MetaOapg.properties.personal_email, str, schemas.Unset] = schemas.unset,
        dob: typing.Union[MetaOapg.properties.dob, str, schemas.Unset] = schemas.unset,
        ssn: typing.Union[MetaOapg.properties.ssn, str, schemas.Unset] = schemas.unset,
        marital_status: typing.Union[MetaOapg.properties.marital_status, str, schemas.Unset] = schemas.unset,
        bio: typing.Union[MetaOapg.properties.bio, str, schemas.Unset] = schemas.unset,
        asset_management: typing.Union[MetaOapg.properties.asset_management, str, schemas.Unset] = schemas.unset,
        laptop_asset_number: typing.Union[MetaOapg.properties.laptop_asset_number, str, schemas.Unset] = schemas.unset,
        corporate_card_member: typing.Union[MetaOapg.properties.corporate_card_member, str, schemas.Unset] = schemas.unset,
        key_tag_number: typing.Union[MetaOapg.properties.key_tag_number, str, schemas.Unset] = schemas.unset,
        linkedin_url: typing.Union[MetaOapg.properties.linkedin_url, str, schemas.Unset] = schemas.unset,
        office_main_number: typing.Union[MetaOapg.properties.office_main_number, str, schemas.Unset] = schemas.unset,
        office_direct_dial: typing.Union[MetaOapg.properties.office_direct_dial, str, schemas.Unset] = schemas.unset,
        office_phone: typing.Union[MetaOapg.properties.office_phone, str, schemas.Unset] = schemas.unset,
        office_fax: typing.Union[MetaOapg.properties.office_fax, str, schemas.Unset] = schemas.unset,
        office_company_mobile: typing.Union[MetaOapg.properties.office_company_mobile, str, schemas.Unset] = schemas.unset,
        home_phone: typing.Union[MetaOapg.properties.home_phone, str, schemas.Unset] = schemas.unset,
        mobile_phone: typing.Union[MetaOapg.properties.mobile_phone, str, schemas.Unset] = schemas.unset,
        home: typing.Union['Home', schemas.Unset] = schemas.unset,
        office: typing.Union['Office', schemas.Unset] = schemas.unset,
        emergency_contact: typing.Union[MetaOapg.properties.emergency_contact, str, schemas.Unset] = schemas.unset,
        emergency_contact_phone: typing.Union[MetaOapg.properties.emergency_contact_phone, str, schemas.Unset] = schemas.unset,
        resume: typing.Union[MetaOapg.properties.resume, str, schemas.Unset] = schemas.unset,
        current_job_description: typing.Union[MetaOapg.properties.current_job_description, str, schemas.Unset] = schemas.unset,
        job_description: typing.Union[MetaOapg.properties.job_description, str, schemas.Unset] = schemas.unset,
        salary: typing.Union['Salary', schemas.Unset] = schemas.unset,
        healthcare: typing.Union['Healthcare', schemas.Unset] = schemas.unset,
        healthcare_info: typing.Union[MetaOapg.properties.healthcare_info, str, schemas.Unset] = schemas.unset,
        dental: typing.Union['Dental', schemas.Unset] = schemas.unset,
        dental_info: typing.Union[MetaOapg.properties.dental_info, str, schemas.Unset] = schemas.unset,
        vision_plan_info: typing.Union[MetaOapg.properties.vision_plan_info, str, schemas.Unset] = schemas.unset,
        life_insurance_info: typing.Union[MetaOapg.properties.life_insurance_info, str, schemas.Unset] = schemas.unset,
        namely_time_employee_role: typing.Union[MetaOapg.properties.namely_time_employee_role, str, schemas.Unset] = schemas.unset,
        namely_time_manager_role: typing.Union[MetaOapg.properties.namely_time_manager_role, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Profile':
        return super().__new__(
            cls,
            *args,
            id=id,
            email=email,
            first_name=first_name,
            last_name=last_name,
            user_status=user_status,
            updated_at=updated_at,
            created_at=created_at,
            preferred_name=preferred_name,
            image=image,
            full_name=full_name,
            job_title=job_title,
            reports_to=reports_to,
            employee_type=employee_type,
            access_role=access_role,
            ethnicity=ethnicity,
            links=links,
            middle_name=middle_name,
            gender=gender,
            job_change_reason=job_change_reason,
            terminated_reason=terminated_reason,
            start_date=start_date,
            departure_date=departure_date,
            employee_id=employee_id,
            personal_email=personal_email,
            dob=dob,
            ssn=ssn,
            marital_status=marital_status,
            bio=bio,
            asset_management=asset_management,
            laptop_asset_number=laptop_asset_number,
            corporate_card_member=corporate_card_member,
            key_tag_number=key_tag_number,
            linkedin_url=linkedin_url,
            office_main_number=office_main_number,
            office_direct_dial=office_direct_dial,
            office_phone=office_phone,
            office_fax=office_fax,
            office_company_mobile=office_company_mobile,
            home_phone=home_phone,
            mobile_phone=mobile_phone,
            home=home,
            office=office,
            emergency_contact=emergency_contact,
            emergency_contact_phone=emergency_contact_phone,
            resume=resume,
            current_job_description=current_job_description,
            job_description=job_description,
            salary=salary,
            healthcare=healthcare,
            healthcare_info=healthcare_info,
            dental=dental,
            dental_info=dental_info,
            vision_plan_info=vision_plan_info,
            life_insurance_info=life_insurance_info,
            namely_time_employee_role=namely_time_employee_role,
            namely_time_manager_role=namely_time_manager_role,
            _configuration=_configuration,
            **kwargs,
        )

from namely_python_sdk.model.dental import Dental
from namely_python_sdk.model.healthcare import Healthcare
from namely_python_sdk.model.home import Home
from namely_python_sdk.model.image import Image
from namely_python_sdk.model.job_title_link import JobTitleLink
from namely_python_sdk.model.office import Office
from namely_python_sdk.model.profile_employee_type import ProfileEmployeeType
from namely_python_sdk.model.profile_links import ProfileLinks
from namely_python_sdk.model.profile_reports_to import ProfileReportsTo
from namely_python_sdk.model.salary import Salary
