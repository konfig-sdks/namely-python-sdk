# coding: utf-8

"""
    Namely API

    Move your app forward with the Namely API Move your app forward with the Namely API

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from namely_python_sdk.pydantic.field_links import FieldLinks

class Field(BaseModel):
    # unique identifier of the profile field
    id: typing.Optional[str] = Field(None, alias='id')

    # immutable name of the profile field; auto created based on label if using UI to create profile field
    name: typing.Optional[str] = Field(None, alias='name')

    # label of the profile field; editable on UI and through API
    label: typing.Optional[str] = Field(None, alias='label')

    # immutable data type of the profile field; valid values include <code>text</code>, <code>image</code>, <code>referencehistory</code> (<code>job_title</code> only), <code>select</code>, <code>date</code>, <code>email</code>, <code>longtext</code>, <code>checkboxes</code>, <code>address</code>, <code>address</code>, <code>file</code>, <code>referenceselect</code> (<code>user_status</code> only), <code>salary</code>, <code>number</code>, <code>address</code>
    type: typing.Optional[str] = Field(None, alias='type')

    # N/A - no longer supported
    default: typing.Optional[bool] = Field(None, alias='default')

    # <code>true</code> if the profile field is able to be deleted
    deletable: typing.Optional[bool] = Field(None, alias='deletable')

    # valid format information for passing data through the API for the profile field
    valid_format_info: typing.Optional[str] = Field(None, alias='valid_format_info')

    # refers to the profile field \"block\" in which the profile field is located (included in \"linked\"); sequentially corresponds based the position of the block title; top position is 0
    block_index: typing.Optional[int] = Field(None, alias='block_index')

    links: typing.Optional[FieldLinks] = Field(None, alias='links')

    # N/A - no longer supported
    example: typing.Optional[bool] = Field(None, alias='example')

    # N/A - no longer supported
    x-konfig-original-example_: typing.Optional[bool] = Field(None, alias='x-konfig-original-example')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
