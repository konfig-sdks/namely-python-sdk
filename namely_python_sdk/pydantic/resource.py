# coding: utf-8

"""
    Namely API

    Move your app forward with the Namely API Move your app forward with the Namely API

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Resource(BaseModel):
    # name/label of the resource file
    title: typing.Optional[str] = Field(None, alias='title')

    # unique identifier of the resource file
    id: typing.Optional[str] = Field(None, alias='id')

    link: typing.Optional[str] = Field(None, alias='link')

    # file name of the resource file
    file_name: typing.Optional[str] = Field(None, alias='file_name')

    file_format: typing.Optional[str] = Field(None, alias='file_format')

    file_size: typing.Optional[str] = Field(None, alias='file_size')

    file_url: typing.Optional[str] = Field(None, alias='file_url')

    last_edited: typing.Optional[str] = Field(None, alias='last_edited')

    # <code>id</code> of the folder in which the resource file sits; <code>null</code> if not in a folder
    folder_id: typing.Optional[int] = Field(None, alias='folder_id')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
