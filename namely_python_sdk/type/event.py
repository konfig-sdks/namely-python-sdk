# coding: utf-8

"""
    Namely API

    Move your app forward with the Namely API Move your app forward with the Namely API

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from namely_python_sdk.type.event_links import EventLinks

class RequiredEvent(TypedDict):
    pass

class OptionalEvent(TypedDict, total=False):
    # unique identifier of the event
    id: str

    # a link to the event on the web
    href: str

    # the type of event: <code>announcement</code> (posted by a profile) or <code>birthday</code>, <code>anniversary</code>, <code>recent_arrival</code> (auto-generated)
    type: str

    # epoch time that the event was created/generated
    time: int

    # the hour difference between UTC and the main office of the company
    ufc_offset: int

    # content of the post, displayed in markdown; null for anything but type: <code>announcement</code>
    content: str

    # content of the post, displayed in HTML; null for anything but type: <code>announcement</code>
    html_content: str

    # number of years related profile has been at the company; null for anything but: <code>anniversary</code>
    years_at_company: int

    # <code>true</code> if the company has commenting enabled on the home feed; same as in <code>meta</code>
    use_comments: bool

    # <code>true</code> if the token bearer has a role with permission to comment on events on the home feed (will be same value on all events)
    can_comment: bool

    # <code>true</code> if the token bearer has a role with permission to delete the event; will always be <code>true</code> for one's own announcement
    can_destroy: bool

    links: EventLinks

    # <code>true</code> if the token bearer has a role with permission to like events on the home feed (will be same value on all events)
    can_like: bool

    # total number of likes on event
    likes_count: int

    # <code>true</code> if the token bearer has liked this event
    liked_by_current_profile: bool

class Event(RequiredEvent, OptionalEvent):
    pass
